generator client {
    provider        = "prisma-client-js"
    previewFeatures = ["interactiveTransactions"]
}

datasource db {
    provider = "postgresql"
    url      = env("DATABASE_URL")
}

enum AccountType {
    STUDENT
    ADMIN
    MERCHANT
}

// Transaction status
enum TXStatus {
    SUCCESS
    PROCESS
    FAILED
    TX_NOT_ENOUGH_MONEY
    TX_ID_WAS_DECLARED
}

enum TXType {
    SEND
    RECEIVE
    WITH_DRAW
    TOPUP_UMCOOP
    TOPUP_UMBANK
    // TOPUP_PROMPTPAY
    // TOPUP_TRUEMONEY
    // TOPUP_LINEPAY
}

model transaction {
    transaction_id Int      @id @default(autoincrement())
    sender_id      String
    receiver_id    String
    type           TXType
    status         TXStatus
    info           String
    amount         Float
    timestamp      DateTime @default(now()) @db.Timestamp(6)
    sender         user     @relation("sender", fields: [sender_id], references: [user_id])
    receiver       user     @relation("receiver", fields: [receiver_id], references: [user_id])
}

model user {
    id                   Int           @id @default(autoincrement())
    account_type         AccountType
    user_id              String        @unique
    firstname            String
    lastname             String
    email                String
    phone_number         String
    password             String
    balance              Float
    expense              Float
    setting              Json          @db.Json
    created              DateTime      @default(now()) @db.Timestamp(6)
    last_update          DateTime      @updatedAt @db.Timestamp(6)
    stores               store[]
    transaction_sender   transaction[] @relation("sender")
    transaction_receiver transaction[] @relation("receiver")
}

model store {
    id         Int    @id @default(autoincrement())
    owner      user   @relation(fields: [ownerId], references: [user_id])
    ownerId    String
    store_name String
    location   String
    income     Float
}
